name: Build and Deploy to GKE

on:
  push:
    branches:
      - master

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: 'auth'
      uses: 'google-github-actions/auth@v2'
      with:
        project_id: ${{ vars.GKE_PROJECT }}
        credentials_json: '${{ secrets.GKE_SA_KEY }}'

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v2'

    # Get the GKE credentials so we can deploy to the cluster
    - name: Get GKE credentials
      uses: google-github-actions/get-gke-credentials@v2
      with:
        cluster_name: ${{ vars.GKE_CLUSTER }}
        location: ${{ vars.GKE_ZONE }}

    # Build the Docker image
    - name: Build and push Docker image
      run: |
        gcloud auth configure-docker us-central1-docker.pkg.dev
        gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://us-central1-docker.pkg.dev
        
        REPO_NAME="${GITHUB_REPOSITORY##*/}"
        export IMAGE_TAG=${{ vars.BASE_IMAGE_TAG }}/$REPO_NAME:${{ github.sha }}
        echo "Building Docker image with tag: $IMAGE_TAG"
        docker build -t $IMAGE_TAG .
        echo "Docker image built."
        echo "Pushing Docker image to registry."
        docker push $IMAGE_TAG
        echo "Docker image pushed."

    # Deploy the Docker image to the GKE cluster
    - name: Deploy to GKE
      run: |
        REPO_NAME="${GITHUB_REPOSITORY##*/}"
        export IMAGE_TAG=${{ vars.BASE_IMAGE_TAG }}/$REPO_NAME:${{ github.sha }}
        echo "Setting new image in the Kubernetes deployment."
        kubectl set image deployment/$REPO_NAME *=$IMAGE_TAG
        echo "Applying Kubernetes configurations."
        kubectl apply -f k8s/deployment.yaml
        kubectl apply -f k8s/service.yaml
        echo "Kubernetes configurations applied."
        echo "Checking rollout status."
        kubectl rollout status deployment/$REPO_NAME
        kubectl get services -o wide
        echo "Deployment complete."
